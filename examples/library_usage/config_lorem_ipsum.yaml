settings:  
  experiment_id: "abc"
  referencing_keys:
    sample_key: input_ids
    target_key: target_ids
  training:
    callback_interval_in_samples: 6
    global_num_training_samples: 12
    global_num_seen_samples: 0
    do_apply_activation_checkpointing: true
    gradient_acc_steps: 1
    local_train_micro_batch_size: 3
    sequence_length: 256
  cuda_env:
    local_rank: ${modalities_env:LOCAL_RANK}
    global_rank: ${modalities_env:RANK}
    world_size: ${modalities_env:WORLD_SIZE}

tokenizer:
  component_key: tokenizer
  variant_key: gpt2_tokenizer_fast
  config:
    tokenizer_file: ../../data/tokenizer_gpt2.json

collate_fn:  
  component_key: collate_fn
  variant_key: custom_gpt_2_llm_collator
  config:
    sample_key: ${settings.referencing_keys.sample_key}
    target_key: ${settings.referencing_keys.target_key}
    custom_attribute: "custom_value"

train_dataset:  
  component_key: dataset
  variant_key: mem_map_dataset
  config:
    raw_data_path: ../../data/lorem_ipsum.jsonl
    index_path: ../../data/lorem_ipsum.idx
    block_size: ${settings.training.sequence_length}
    jq_pattern: ".text"
    sample_key:  ${settings.referencing_keys.sample_key}
    tokenizer:
      instance_key: tokenizer
      pass_type: BY_REFERENCE

train_dataloader:
  component_key: data_loader
  variant_key: default
  config:
    num_workers: 2
    pin_memory: true
    shuffle: false
    dataloader_tag: "train"
    dataset:
      instance_key: train_dataset
      pass_type: BY_REFERENCE
    batch_sampler:
      component_key: batch_sampler
      variant_key: default
      config:
        batch_size: ${settings.training.local_train_micro_batch_size}
        drop_last: false
        sampler:
          component_key: sampler
          variant_key: distributed_sampler
          config:
            rank: ${settings.cuda_env.global_rank}
            num_replicas: ${settings.cuda_env.world_size}
            shuffle: true
            dataset:
              instance_key: train_dataset
              pass_type: BY_REFERENCE
    collate_fn:
      instance_key: collate_fn
      pass_type: BY_REFERENCE

val_dataloader:
  component_key: data_loader
  variant_key: default
  config:
    num_workers: 2
    pin_memory: true
    shuffle: false
    dataloader_tag: "val"
    dataset:
      instance_key: train_dataset
      pass_type: BY_REFERENCE
    batch_sampler:
      component_key: batch_sampler
      variant_key: default
      config:
        batch_size: 3
        drop_last: false
        sampler:
          component_key: sampler
          variant_key: distributed_sampler
          config:
            rank: ${settings.cuda_env.global_rank}
            num_replicas: ${settings.cuda_env.world_size}
            shuffle: false
            dataset:
              instance_key: train_dataset
              pass_type: BY_REFERENCE
    collate_fn:
      instance_key: collate_fn
      pass_type: BY_REFERENCE

test_dataloader:
  component_key: data_loader
  variant_key: default
  config:
    num_workers: 2
    pin_memory: true
    shuffle: false
    dataloader_tag: "test"
    dataset:
      instance_key: train_dataset
      pass_type: BY_REFERENCE
    batch_sampler:
      component_key: batch_sampler
      variant_key: default
      config:
        batch_size: 3
        drop_last: false
        sampler:
          component_key: sampler
          variant_key: distributed_sampler
          config:
            rank: ${settings.cuda_env.global_rank}
            num_replicas: ${settings.cuda_env.world_size}
            shuffle: false
            dataset:
              instance_key: train_dataset
              pass_type: BY_REFERENCE
    collate_fn:
      instance_key: collate_fn
      pass_type: BY_REFERENCE

eval_dataloaders:
  - instance_key: val_dataloader
    pass_type: BY_REFERENCE
  - instance_key: test_dataloader
    pass_type: BY_REFERENCE 

checkpointing:
  component_key: checkpointing
  variant_key: default
  config:
    checkpointing_strategy:
      component_key: checkpointing_strategy
      variant_key: save_k_most_recent_checkpoints_strategy
      config:
        k: -1   # -1 to save all checkpoints
    checkpointing_execution:
      component_key: checkpointing_execution
      variant_key: fsdp_to_disc_checkpointing
      config:
        checkpoint_path: ../../data/checkpoints
        global_rank: ${settings.cuda_env.global_rank}
        experiment_id: ${settings.experiment_id} 
        mixed_precision_settings: BF_16
        sharding_strategy: FULL_SHARD
        block_names: [GPT2Block]

# resolving class types via different enums sucks...
loss_fn:
  component_key: loss
  variant_key: clm_cross_entropy_loss
  config:
    target_key: target_ids
    prediction_key: logits

wrapped_model:
  component_key: model
  variant_key: fsdp_wrapped
  config:
    model:
      instance_key: model
      pass_type: BY_REFERENCE
    sync_module_states: true
    mixed_precision_settings: BF_16
    sharding_strategy: FULL_SHARD
    block_names: [GPT2Block]

model:
  component_key: model
  variant_key: gpt2
  config:
    sample_key: "input_ids" # TODO reference this
    prediction_key: "logits" # TODO reference this
    block_size: 256  # TODO reference this (same as sequence length)
    vocab_size: 50304 # GPT-2 vocab_size of 50257, padded up to nearest multiple of 64 for efficiency
    n_layer: 2
    n_head: 4
    ffn_hidden: 128
    n_embd: 128
    dropout: 0.0
    bias: true # True: bias in Linears and LayerNorms, like GPT-2. False: a bit better and faster
    attention:
      attention_type: default_attention # pytorch_flash_attention
      scaling_factor: 3
    activation: gelu
    epsilon: 1e-5
    weight_init:
      mean: 0.0
      std: 0.02

optimizer:  
  component_key: optimizer
  variant_key: adam_w
  config:
    lr: 0.0001
    wrapped_model: 
      instance_key: wrapped_model
      pass_type: BY_REFERENCE

# message subscriber

batch_progress_subscriber:
  component_key: progress_subscriber
  variant_key: rich
  config:
    local_rank: ${settings.cuda_env.local_rank}
    world_size: ${settings.cuda_env.world_size}
    global_num_seen_samples: ${settings.training.global_num_seen_samples}
    train_dataloader:
      instance_key: train_dataloader
      pass_type: BY_REFERENCE
    eval_dataloaders:
        instance_key: eval_dataloaders
        pass_type: BY_REFERENCE

    
evaluation_subscriber:
  component_key: results_subscriber
  variant_key: wandb
  config:
    local_rank: ${settings.cuda_env.local_rank}
    project: modalities
    mode: OFFLINE
    experiment_id: "abc" # TODO set this via env var maybe?
    directory: "."
    